{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 TimesNewRomanPSMT;}
{\colortbl;\red255\green255\blue255;\red25\green25\blue25;}
{\*\expandedcolortbl;;\cssrgb\c12941\c12941\c12941;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs32 \cf2 \expnd0\expndtw0\kerning0
class MyHashSet:\
\
    def __init__(self):\
        self.set = [ListNode(0) for i in range(10**4)]\
        \
\
    def add(self, key: int) -> None:\
        cur = self.set[key % len(self.set)]\
        while cur.next:\
            if cur.next.key == key:\
                return\
            cur = cur. next\
        cur.next = ListNode(key)\
\
    def remove(self, key: int) -> None:\
        cur = self.set[key % len(self.set)]\
        while cur.next:\
            if cur.next.key == key:\
                cur.next = cur.next.next\
                return\
            cur = cur.next\
\
    def contains(self, key: int) -> bool:\
        cur = self.set[key % len(self.set)]\
        while cur.next:\
            if cur.next.key == key:\
                return True\
            cur = cur. next\
        return False\
\
\
# Your MyHashSet object will be instantiated and called as such:\
# obj = MyHashSet()\
# obj.add(key)\
# obj.remove(key)\
# param_3 = obj.contains(key)}