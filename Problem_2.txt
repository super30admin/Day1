class MinStack(object):

    def __init__(self):
        self.my_stack=[]
        self.min_stack=[]
        self.min = (2**31)-1 
        
    def push(self, val):
        """
        :type val: int
        :rtype: None
        """
        self.my_stack.append(val)
        if val < self.min:
            self.min = val
        self.min_stack.append(self.min)

    def pop(self):
        """
        :rtype: None
        """
        self.my_stack = self.my_stack[:-1]
        self.min_stack = self.min_stack[:-1]
        if (self.my_stack == []) and (self.min_stack == []):
            self.min = (2**31)-1 
        else :
            self.min = self.min_stack[-1]

    def top(self):
        """
        :rtype: int
        """
        return self.my_stack[-1]
        

    def getMin(self):
        """
        :rtype: int
        """
        return self.min_stack[-1] 
        


# Your MinStack object will be instantiated and called as such:
# obj = MinStack()
# obj.push(val)
# obj.pop()
# param_3 = obj.top()
# param_4 = obj.getMin()