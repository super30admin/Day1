{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 TimesNewRomanPSMT;}
{\colortbl;\red255\green255\blue255;\red25\green25\blue25;}
{\*\expandedcolortbl;;\cssrgb\c12941\c12941\c12941;}
\margl1440\margr1440\vieww28600\viewh15300\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs32 \cf2 \expnd0\expndtw0\kerning0
class MinStack:\
\
    def __init__(self):\
        self.stack = []\
        self.minstack = []\
\
    def push(self, val: int) -> None:\
        self.stack.append(val)\
        minval = min(val, self.minstack[-1] if self.minstack else val)\
        self.minstack.append(minval)\
        \
    def pop(self) -> None:\
        self.stack.pop()\
        self.minstack.pop()\
\
    def top(self) -> int:\
        return self.stack[-1]\
        \
    def getMin(self) -> int:\
        return self.minstack[-1]\
\
# Your MinStack object will be instantiated and called as such:\
# obj = MinStack()\
# obj.push(val)\
# obj.pop()\
# param_3 = obj.top()\
# param_4 = obj.getMin()}