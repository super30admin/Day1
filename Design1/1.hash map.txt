class MyHashMap {

    int buckets=1000;
    int bucketItems=1000;
    int [][] arr =new int[buckets][];
    boolean[][] bool=new boolean[buckets][];
    public int hash1(int key)
    {
        return key%buckets;
    }
    public int hash2(int key)
    {
        return key/buckets;
    }
    /** Initialize your data structure here. */
    public MyHashMap() {
        
    }
    
    /** value will always be non-negative. */
    public void put(int key, int value) 
    {
        int first=hash1(key);
        int second=hash2(key);
        if(arr[first]==null)
        {
            arr[first]=new int[bucketItems];
            bool[first]=new boolean[bucketItems];
        }
        arr[first][second]=value;
        bool[first][second]=true;
    }
    
    /** Returns the value to which the specified key is mapped, or -1 if this map contains no mapping for the key */
    public int get(int key) {
        int first=hash1(key);
        int second=hash2(key);
         if(arr[first]!=null)
         {
             if(bool[first][second]==true)
                 return arr[first][second];
             else
                 return -1;
         }
        else
            return -1;
    }
    
    /** Removes the mapping of the specified value key if this map contains a mapping for the key */
    public void remove(int key) {
         int first=hash1(key);
        int second=hash2(key);
        if(arr[first]!=null)
         {
             if(bool[first][second]==true)
                 bool[first][second]=false;
         }
    }
}

/**
 * Your MyHashMap object will be instantiated and called as such:
 * MyHashMap obj = new MyHashMap();
 * obj.put(key,value);
 * int param_2 = obj.get(key);
 * obj.remove(key);
 */