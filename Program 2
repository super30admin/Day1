// space complexity: O(1)
// time complexity: push,top,pop,min -O(1)


class MinStack {

    Node node;

    public MinStack() {
        this.node = null;;
    }
    
    public void push(int val) {
        if (node == null) {
            node = new Node(val, val, null);
            return;
        }
        node = new Node(val, Math.min(node.min, val), node);
    }
    
    public void pop() {
        node = node.next;
    }
    
    public int top() {
        return node.val;
    }
    
    public int getMin() {
        return node.min;
    }

    class Node {
        int val;
        int min;
        Node next;

        Node(int val, int min, Node next) {
            this.val = val;
            this.min = min;
            this.next = next;
        }
    }
}

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack obj = new MinStack();
 * obj.push(val);
 * obj.pop();
 * int param_3 = obj.top();
 * int param_4 = obj.getMin();
 */
